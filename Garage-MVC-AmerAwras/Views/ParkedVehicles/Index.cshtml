
@model PagedList.IPagedList<Garage_MVC_AmerAwras.Models.ParkedVehicle>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<br /> <br />
@{
    ViewBag.Title = "Parked Vehicle";
}

<div class="container">
    <h2>Parked Vehicle</h2>
    <br />

    <form class="navbar-form" role="search">
        <div class="input-group add-on">
            <input class="form-control" placeholder="Search" name="searchparam" id="searchparam" type="text">
             <div class="input-group-btn">
                <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
            </div>
        </div>
    </form>


    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Registration Number", "Index", new { sortOrder = ViewBag.RegnrSortParm, currentFilter = ViewBag.CurrentFilter })
                    @*@Html.DisplayNameFor(model => model.RegNumber)*@
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Color)*@
                    @Html.ActionLink("Color", "Index", new { sortOrder = ViewBag.ColorSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Brand)*@
                    @Html.ActionLink("Brand", "Index", new { sortOrder = ViewBag.BrandSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Model)*@
                    @Html.ActionLink("Model", "Index", new { sortOrder = ViewBag.ModelSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.NumberOfWheels)*@
                    @Html.ActionLink("Wheels", "Index", new { sortOrder = ViewBag.WheelsSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.CheckIn)*@
                    @Html.ActionLink("CheckIn", "Index", new { sortOrder = ViewBag.DatesSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.VehicleType)*@
                    @Html.ActionLink("Vehicle Type", "Index", new { sortOrder = ViewBag.TypeSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="VehicleRow">

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Color)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Brand)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Model)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberOfWheels)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CheckIn)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VehicleType)
                    </td>
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |*@
                        @Html.ActionLink("Detail-view", "Details", new { id = item.Id }) |
                        @Html.ActionLink("CheckOut", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, Page => Url.Action("Index",
    new { Page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.currentFilter }))